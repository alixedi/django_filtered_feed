{"name":"Django filtered feed","tagline":"Feeds sans noise.","body":"So the average-joe RSS is binary ie either you subscribe to a feed or you donâ€™t. This approach results in a ridiculous amount of junk in our inbox. What if we could subscribe `define` the feed that we would like to subscribe to? Thanks to the stellar [django syndication framework][] and [django filters][], I was able to hack together a fix.\r\n\r\nIf you have a `Book` model like so:\r\n\r\n    {% highlight python  %}\r\n    class Book(models.Model):\r\n        name = models.CharField(max_length=256)\r\n        pages = models.IntegerField()\r\n\r\n    def __unicode__(self):\r\n        return self.name\r\n    {% endhighlight  %}\r\n\r\nA [django\\_filter][django filters] `FilterSet` like so:\r\n\r\n    {% highlight python  %}\r\n    class BookFilterSet(django_filters.FilterSet):\r\n        pages = django_filters.NumberFilter(lookup_type='lt')\r\n        class Meta:\r\n            model = Book\r\n            fields = ['pages']\r\n    {% endhighlight  %}\r\n\r\nA `FilteredFeed` class like so:\r\n\r\n    {% highlight python  %}\r\n    class BookFilteredFeed(BaseFilteredFeed):\r\n        model = Book\r\n        filter_set = BookFilterSet\r\n        title = \"BookFeed\"\r\n        link = \"http://localhost:8000\"\r\n        description = \"Get alerts for new books - less than given number of pages!\"\r\n\r\n        def item_link(self, item):\r\n            return reverse('book_detail', args=[item.id])\r\n    {% endhighlight  %}\r\n\r\nHook up the necessary urls like so:\r\n\r\n    {% highlight python  %}\r\n    urlpatterns = patterns('',\r\n        url(r'^books/feed$', BookFilteredFeed.as_view(), name='book_feed'),\r\n    )\r\n    {% endhighlight  %}\r\n\r\nAnd finally, if we have the following 3 books in our DB:\r\n\r\n1.  Introduction to Python (100 pages)\r\n2.  Introduction to C (300 pages)\r\n3.  Javascript - The good parts (300 pages)\r\n\r\nHitting [<http://localhost:8000/books/feed>][] will give you an RSS feed includes:\r\n\r\n-   Introduction to Python\r\n-   Introduction to C\r\n-   Javascript - The good parts\r\n\r\nAnd hitting [<http://localhost:8000/books/feed?pages=200>][] will give you an RSS feed that just includes:\r\n\r\n-   Introduction to Python\r\n\r\nYou users will forever remain grateful for sparing them the deluge that follows a binary subscription. You will be hailed the king of syndication, worshipped as a rock star and live happily ever after. The best part is that it takes a minute to get started:\r\n\r\n> pip install django_filtered_feed\r\n\r\nFollowed ofcourse by including `filtered_feed` in your `INSTALLED_APPS`.\r\n\r\n    {% highlight python  %}\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'filtered_feed',\r\n        ...\r\n    )\r\n    {% endhighlight  %}\r\n","google":"UA-51375524-4","note":"Don't delete this file! It's used internally to help with page regeneration."}